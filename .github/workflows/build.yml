name: IDFPlus Build Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - build-workflow-testing

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: build-workflow-testing

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Enable caching for pip on windows
        uses: actions/cache@v3
        if: startsWith(runner.os, 'windows')
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Enable caching for pip on ubuntu
        uses: actions/cache@v3
        if: startswith(matrix.os, 'ubuntu')
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install global dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Install debian-specific dependencies
        if: startswith(matrix.os, 'ubuntu')
        run: |
          sudo apt install -y debhelper

      - name: Freeze the app
        run: |
          python setup.py freeze

      - name: Package the app
        run: |
          python setup.py make_installer

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.os}}
          path: artifacts
